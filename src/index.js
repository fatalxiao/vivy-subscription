/**
 * @file index.js
 */

/**
 * Default Vivy subscription options
 * @type {{}}
 */
const DEFAULT_OPTIONS = {};

/**
 * Create Vivy subscription plugin
 * @param options
 * @returns {{}}
 */
export default function createVivySubscriptionPlugin(options = {}) {

    const op = {...DEFAULT_OPTIONS, ...options};

    // All unsubscriptions generated by subscriptions in models
    const unsubscriptions = {};

    /**
     * Register subscriptions in models
     * @param store
     * @param nameSpace
     * @param subscriptions
     */
    function registerSubscriptions(store, nameSpace, subscriptions) {

        if (!store || !nameSpace || !subscriptions || subscriptions.length < 1) {
            return;
        }

        Object.keys(subscriptions)?.forEach(key => {

            if (!unsubscriptions.hasOwnProperty(nameSpace)) {
                unsubscriptions[nameSpace] = {};
            }

            unsubscriptions[nameSpace][key] = subscriptions[key]({
                history: store.history
            })(
                store.dispatch,
                store.getState
            );

        });

    }

    return {
        onRegisterModel: (model, store) => {

            const {nameSpace, subscriptions} = model;

            // Register subscriptions
            if (subscriptions) {
                registerSubscriptions(store, nameSpace, subscriptions || {});
            }

        }
    };

}
